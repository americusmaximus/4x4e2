/*
Copyright (c) 2023 Americus Maximus

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#include "DX.hxx"

#define VERTEX_SHADER_COLOR_SIZE 4
#define VERTEX_SHADER_FLOAT2_SIZE (2 * 4)
#define VERTEX_SHADER_FLOAT3_SIZE (3 * 4)

#define VERTEX_SHADER_STREAM_0_INDEX 0
#define VERTEX_SHADER_STREAM_1_INDEX 1

#define DEFAULT_VERTEX_SHADER_USAGE_INDEX 0

namespace DX::Shaders::Vertex
{
    const D3DVERTEXELEMENT9 DECLARATION_XYZ_NORMAL_UV[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_NORMAL,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        }, D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_XYZ_DIFFUSE_UV[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
{
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_D3DCOLOR,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_COLOR,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_COLOR_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        }, D3DDECL_END()
    };

    const D3DVERTEXELEMENT9 DECLARATION_XYZ_NORMAL_UV_BLENDWEIGHT_BLENDINDICES[]
    {
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_POSITION,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_NORMAL,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_0_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE + VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT2,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_TEXCOORD,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_1_INDEX,
            .Offset = 0,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_BLENDWEIGHT,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        },
        {
            .Stream = VERTEX_SHADER_STREAM_1_INDEX,
            .Offset = VERTEX_SHADER_FLOAT3_SIZE,
            .Type = D3DDECLTYPE::D3DDECLTYPE_FLOAT3,
            .Method = D3DDECLMETHOD::D3DDECLMETHOD_DEFAULT,
            .Usage = D3DDECLUSAGE::D3DDECLUSAGE_BLENDINDICES,
            .UsageIndex = DEFAULT_VERTEX_SHADER_USAGE_INDEX
        }, D3DDECL_END()
    };

    // Assets/dirlight.vs
    const DWORD DirLightFunction[178]
    {
        0xFFFE0101, 0x59FFFE, 0x47554244, 0x28,
        0x12C, 0x0, 0x1, 0x68,
        0x18, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x645C7374, 0x696C7269, 0x2E746867,
        0xAB007376, 0x28, 0x2, 0x16C,
        0x3, 0x178, 0x4, 0x184,
        0x5, 0x190, 0x6, 0x19C,
        0x7, 0x1A8, 0x8, 0x1B4,
        0x9, 0x1C0, 0xA, 0x1D0,
        0xB, 0x1E0, 0xC, 0x1F0,
        0xD, 0x200, 0xE, 0x210,
        0xF, 0x220, 0x10, 0x230,
        0x11, 0x240, 0x12, 0x24C,
        0x13, 0x258, 0x14, 0x264,
        0x15, 0x274, 0x16, 0x284,
        0x17, 0x294, 0x18, 0x2A4,
        0x19, 0x2B4, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x8, 0x80010001, 0x90E40003, 0xA0E40004,
        0xB, 0x800F0001, 0x80000001, 0xA0000005,
        0x5, 0x800F0001, 0x80E40001, 0xA0E40008,
        0x2, 0x800F0001, 0x80E40001, 0xA0E40007,
        0x1, 0x80080001, 0xA0FF0005, 0x1,
        0xD00F0000, 0x80E40001, 0x1, 0xE00F0000,
        0x90E40007, 0x9, 0x80040000, 0x90E40000,
        0xA0E40002, 0x2, 0x80040000, 0x80AA0000,
        0xA1000006, 0x5, 0x80040000, 0x80AA0000,
        0xA0550006, 0xB, 0x80040000, 0x80AA0000,
        0xA0000005, 0xA, 0x80040000, 0x80AA0000,
        0xA0550005, 0x2, 0xC00F0001, 0xA0550005,
        0x81AA0000, 0xFFFF
    };

    // Assets/texgen.vs
    const DWORD TexGenFunction[217]
    {
        0xFFFE0101, 0x67FFFE, 0x47554244, 0x28,
        0x164, 0x0, 0x1, 0x68,
        0x1F, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x745C7374, 0x65677865, 0x73762E6E,
        0xABABAB00, 0x28, 0x2, 0x1A4,
        0x3, 0x1B0, 0x4, 0x1BC,
        0x5, 0x1C8, 0x6, 0x1D4,
        0x7, 0x1E0, 0x8, 0x1EC,
        0x9, 0x1F8, 0xA, 0x204,
        0xB, 0x214, 0xC, 0x224,
        0xD, 0x234, 0xE, 0x244,
        0xF, 0x254, 0x10, 0x264,
        0x11, 0x274, 0x12, 0x284,
        0x13, 0x290, 0x14, 0x29C,
        0x15, 0x2AC, 0x16, 0x2BC,
        0x17, 0x2CC, 0x18, 0x2DC,
        0x19, 0x2E8, 0x1A, 0x2F4,
        0x1B, 0x300, 0x1C, 0x310,
        0x1D, 0x320, 0x1E, 0x330,
        0x1F, 0x340, 0x20, 0x350,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1, 0x800F0001,
        0xA0E40000, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x8, 0x80010001, 0x90E40003,
        0xA0E40004, 0xB, 0x800F0001, 0x80000001,
        0xA0000005, 0x5, 0x800F0001, 0x80E40001,
        0xA0E40008, 0x2, 0x800F0001, 0x80E40001,
        0xA0E40007, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x9,
        0x80010000, 0x90E40000, 0xA0E4000F, 0x9,
        0x80020000, 0x90E40000, 0xA0E40010, 0x9,
        0x80040000, 0x90E40000, 0xA0E40011, 0x9,
        0x80080000, 0x90E40000, 0xA0E40012, 0x1,
        0x800F0001, 0x80E40000, 0x1, 0xE00F0000,
        0x80E40001, 0x1, 0xE00F0001, 0x80E40001,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    // Assets/cubic.vs
    const DWORD CubicFunction[241]
    {
        0xFFFE0101, 0x6EFFFE, 0x47554244, 0x28,
        0x180, 0x0, 0x1, 0x64,
        0x23, 0x68, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x635C7374, 0x63696275, 0x73762E,
        0x28, 0x2, 0x1C0, 0x3,
        0x1CC, 0x4, 0x1D8, 0x5,
        0x1E4, 0x6, 0x1F0, 0x7,
        0x1FC, 0x8, 0x208, 0x9,
        0x214, 0xA, 0x220, 0xB,
        0x230, 0xC, 0x240, 0xD,
        0x250, 0xE, 0x260, 0xF,
        0x270, 0x10, 0x280, 0x11,
        0x290, 0x12, 0x2A0, 0x13,
        0x2AC, 0x14, 0x2B8, 0x15,
        0x2C8, 0x16, 0x2D4, 0x17,
        0x2E4, 0x18, 0x2F4, 0x19,
        0x304, 0x1A, 0x314, 0x1B,
        0x324, 0x1C, 0x334, 0x1D,
        0x344, 0x1E, 0x354, 0x1F,
        0x360, 0x20, 0x370, 0x21,
        0x380, 0x22, 0x390, 0x23,
        0x3A0, 0x24, 0x3B0, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x8, 0x80010001, 0x90E40003, 0xA0E40004,
        0xB, 0x800F0001, 0x80000001, 0xA0000005,
        0x5, 0x800F0001, 0x80E40001, 0xA0E40008,
        0x2, 0x800F0001, 0x80E40001, 0xA0E40007,
        0x1, 0x80080001, 0xA0FF0005, 0x1,
        0xD00F0000, 0x80E40001, 0x2, 0x800F0001,
        0xA0E40009, 0x91E40000, 0x7, 0x800F0002,
        0x80FF0001, 0x5, 0x800F0002, 0x80E40001,
        0x80E40002, 0x2, 0x800F0000, 0x90E40003,
        0x90E40003, 0x8, 0x80010000, 0x80E40000,
        0x80E40002, 0x5, 0x800F0001, 0x80000000,
        0x90E40003, 0x2, 0x800F0001, 0x80E40001,
        0x80E40002, 0x8, 0x80010000, 0x80E40001,
        0xA0E4000C, 0x8, 0x80020000, 0x80E40001,
        0xA0E4000D, 0x8, 0x80040000, 0x80E40001,
        0xA0E4000E, 0x1, 0xE00F0000, 0x80E40000,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    // Assets/prelit.vs
    const DWORD PreLitFunction[144]
    {
        0xFFFE0101, 0x4DFFFE, 0x47554244, 0x28,
        0xFC, 0x0, 0x1, 0x68,
        0x12, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x705C7374, 0x696C6572, 0x73762E74,
        0xABABAB00, 0x28, 0x2, 0x13C,
        0x3, 0x148, 0x4, 0x154,
        0x5, 0x160, 0x6, 0x16C,
        0x7, 0x178, 0x8, 0x184,
        0x9, 0x194, 0xA, 0x1A4,
        0xB, 0x1B4, 0xC, 0x1C4,
        0xD, 0x1D0, 0xE, 0x1DC,
        0xF, 0x1EC, 0x10, 0x1FC,
        0x11, 0x20C, 0x12, 0x21C,
        0x13, 0x22C, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x8000000A,
        0x900F0005, 0x1F, 0x80000005, 0x900F0007,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x1, 0xD00F0000, 0x90E40005,
        0x1, 0xE00F0000, 0x90E40007, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80040000, 0x80AA0000, 0xA0550005, 0x2,
        0xC00F0001, 0xA0550005, 0x81AA0000, 0xFFFF
    };

    // Assets/prelittexgen.vs
    const DWORD PreLitTexGenFunction[189]
    {
        0xFFFE0101, 0x5EFFFE, 0x47554244, 0x28,
        0x140, 0x0, 0x1, 0x6C,
        0x1A, 0x70, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x705C7374, 0x696C6572, 0x78657474,
        0x2E6E6567, 0xAB007376, 0x28, 0x2,
        0x180, 0x3, 0x18C, 0x4,
        0x198, 0x5, 0x1A4, 0x6,
        0x1B0, 0x7, 0x1BC, 0x8,
        0x1C8, 0x9, 0x1D4, 0xA,
        0x1E0, 0xB, 0x1F0, 0xC,
        0x200, 0xD, 0x210, 0xE,
        0x220, 0xF, 0x22C, 0x10,
        0x23C, 0x11, 0x24C, 0x12,
        0x25C, 0x13, 0x26C, 0x14,
        0x278, 0x15, 0x284, 0x16,
        0x290, 0x17, 0x2A0, 0x18,
        0x2B0, 0x19, 0x2C0, 0x1A,
        0x2D0, 0x1B, 0x2E0, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x8000000A, 0x900F0005, 0x1F, 0x80000005,
        0x900F0007, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0001,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x1, 0xD00F0000, 0x90E40005, 0x9,
        0x80010000, 0x90E40000, 0xA0E4000F, 0x9,
        0x80020000, 0x90E40000, 0xA0E40010, 0x9,
        0x80040000, 0x90E40000, 0xA0E40011, 0x9,
        0x80080000, 0x90E40000, 0xA0E40012, 0x1,
        0x800F0001, 0x80E40000, 0x1, 0xE00F0000,
        0x80E40001, 0x1, 0xE00F0001, 0x80E40001,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    // Assets/bump.vs
    const DWORD BumpFunction[283]
    {
        0xFFFE0101, 0x7EFFFE, 0x47554244, 0x28,
        0x1C0, 0x0, 0x1, 0x64,
        0x2B, 0x68, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x2E706D75, 0xAB007376,
        0x28, 0x2, 0x200, 0x3,
        0x20C, 0x4, 0x218, 0x5,
        0x224, 0x6, 0x230, 0x7,
        0x23C, 0x8, 0x248, 0x9,
        0x254, 0xA, 0x260, 0xB,
        0x26C, 0xC, 0x278, 0xD,
        0x284, 0xE, 0x290, 0xF,
        0x29C, 0x10, 0x2AC, 0x11,
        0x2BC, 0x12, 0x2CC, 0x13,
        0x2DC, 0x14, 0x2EC, 0x15,
        0x2FC, 0x16, 0x30C, 0x17,
        0x31C, 0x18, 0x32C, 0x19,
        0x33C, 0x1A, 0x348, 0x1B,
        0x354, 0x1C, 0x360, 0x1D,
        0x36C, 0x1E, 0x37C, 0x1F,
        0x390, 0x20, 0x3A0, 0x21,
        0x3AC, 0x22, 0x3BC, 0x23,
        0x3CC, 0x24, 0x3DC, 0x25,
        0x3EC, 0x26, 0x3FC, 0x27,
        0x40C, 0x28, 0x41C, 0x29,
        0x42C, 0x2A, 0x43C, 0x2B,
        0x44C, 0x2C, 0x45C, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1F, 0x80000001, 0x900F0001,
        0x1F, 0x80000002, 0x900F0002, 0x1,
        0x800F0003, 0xA0E40000, 0x1, 0x800F0002,
        0xA0E40000, 0x1, 0x800F0001, 0xA0E40000,
        0x1, 0x800F0000, 0xA0E40000, 0x1,
        0xD00F0000, 0xA0E40000, 0x1, 0xE00F0002,
        0xA0E40000, 0x1, 0xE00F0001, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80040000, 0x80AA0000, 0xA0550005, 0x2,
        0xC00F0001, 0xA0550005, 0x81AA0000, 0x1,
        0xE00F0000, 0x90E40007, 0x1, 0xE00F0002,
        0x90E40007, 0x1, 0xE00F0001, 0xA0550005,
        0x1, 0x800F0001, 0x90E40002, 0x5,
        0x80070000, 0x90090001, 0x80520001, 0x4,
        0x80070000, 0x91520001, 0x80090001, 0x80A40000,
        0x8, 0x80080000, 0x80E40000, 0x80E40000,
        0x7, 0x80080000, 0x80FF0000, 0x5,
        0x800F0000, 0x80E40000, 0x80FF0000, 0x8,
        0x80010001, 0xA0E40004, 0x90E40001, 0x8,
        0x80020001, 0xA0E40004, 0x90E40002, 0x8,
        0x80040001, 0xA0E40004, 0x80E40000, 0x8,
        0x80010002, 0x90E40003, 0x80E40000, 0xD,
        0x80010003, 0x80000002, 0xA0000005, 0x2,
        0x80010003, 0x80000003, 0x80000003, 0x2,
        0x80010003, 0x80000003, 0xA1550005, 0x5,
        0x80040001, 0x80AA0001, 0x80000003, 0x5,
        0x800F0001, 0x80E40001, 0xA0AA0005, 0x2,
        0xD00F0000, 0x80E40001, 0xA0AA0005, 0x1,
        0xD0080000, 0xA0FF0005, 0xFFFF
    };

    // Assets/bumpspec.vs
    const DWORD BumpSpecFunction[316]
    {
        0xFFFE0101, 0x89FFFE, 0x47554244, 0x28,
        0x1EC, 0x0, 0x1, 0x68,
        0x30, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x73706D75, 0x2E636570,
        0xAB007376, 0x28, 0x2, 0x22C,
        0x3, 0x238, 0x4, 0x244,
        0x5, 0x250, 0x6, 0x25C,
        0x7, 0x268, 0x8, 0x274,
        0x9, 0x280, 0xA, 0x28C,
        0xB, 0x298, 0xC, 0x2A4,
        0xD, 0x2B0, 0xE, 0x2C0,
        0xF, 0x2D0, 0x10, 0x2E0,
        0x11, 0x2F0, 0x12, 0x2FC,
        0x13, 0x308, 0x14, 0x318,
        0x15, 0x32C, 0x16, 0x33C,
        0x17, 0x348, 0x18, 0x358,
        0x19, 0x368, 0x1A, 0x378,
        0x1B, 0x384, 0x1C, 0x394,
        0x1D, 0x3A4, 0x1E, 0x3B4,
        0x1F, 0x3C0, 0x20, 0x3D0,
        0x21, 0x3E0, 0x22, 0x3F0,
        0x23, 0x400, 0x24, 0x410,
        0x25, 0x420, 0x26, 0x430,
        0x27, 0x440, 0x28, 0x450,
        0x29, 0x460, 0x2A, 0x470,
        0x2B, 0x480, 0x2C, 0x490,
        0x2D, 0x4A0, 0x2E, 0x4B0,
        0x2F, 0x4C0, 0x30, 0x4D0,
        0x31, 0x4E0, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1, 0x800F0003,
        0xA0E40000, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x1, 0xE00F0000, 0x90E40007, 0x1,
        0x800F0001, 0x90E40002, 0x5, 0x80070000,
        0x90090001, 0x80520001, 0x4, 0x80070000,
        0x91520001, 0x80090001, 0x80A40000, 0x8,
        0x80080000, 0x80E40000, 0x80E40000, 0x7,
        0x80080000, 0x80FF0000, 0x5, 0x800F0000,
        0x80E40000, 0x80FF0000, 0x2, 0x800F0001,
        0xA0E40009, 0x91E40000, 0x8, 0x80080001,
        0x80E40001, 0x80E40001, 0x7, 0x80080001,
        0x80FF0001, 0x5, 0x800F0001, 0x80E40001,
        0x80FF0001, 0x2, 0x800F0002, 0xA0E40004,
        0x80E40001, 0x8, 0x80080002, 0x80E40002,
        0x80E40002, 0x7, 0x80080002, 0x80FF0002,
        0x5, 0x800F0002, 0x80E40002, 0x80FF0002,
        0x8, 0x80010001, 0x80E40002, 0x90E40001,
        0x8, 0x80020001, 0x80E40002, 0x90E40002,
        0x8, 0x80040001, 0x80E40002, 0x80E40000,
        0x8, 0x80010002, 0x90E40003, 0x80E40000,
        0xD, 0x80010003, 0x80000002, 0xA0000005,
        0x2, 0x80010003, 0x80000003, 0x80000003,
        0x2, 0x80010003, 0x80000003, 0xA1550005,
        0x5, 0x80040001, 0x80AA0001, 0x80000003,
        0x5, 0x800F0001, 0x80E40001, 0xA0AA0005,
        0x2, 0xD00F0000, 0x80E40001, 0xA0AA0005,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80080000, 0x80AA0000, 0xA0550005,
        0x2, 0x80080000, 0xA0550005, 0x81FF0000,
        0x5, 0xD0080000, 0x80FF0000, 0xA0FF0005,
        0x1, 0xC00F0001, 0xA0550005, 0xFFFF
    };

    // Assets/bumpcubic.vs
    const DWORD BumpCubicFunction[371]
    {
        0xFFFE0101, 0x9DFFFE, 0x47554244, 0x28,
        0x23C, 0x0, 0x1, 0x68,
        0x3A, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x63706D75, 0x63696275,
        0x73762E, 0x28, 0x2, 0x27C,
        0x3, 0x288, 0x4, 0x294,
        0x5, 0x2A0, 0x6, 0x2AC,
        0x7, 0x2B8, 0x8, 0x2C4,
        0x9, 0x2D0, 0xA, 0x2DC,
        0xB, 0x2E8, 0xC, 0x2F4,
        0xD, 0x300, 0xE, 0x30C,
        0xF, 0x318, 0x10, 0x324,
        0x11, 0x334, 0x12, 0x344,
        0x13, 0x354, 0x14, 0x364,
        0x15, 0x374, 0x16, 0x384,
        0x17, 0x394, 0x18, 0x3A4,
        0x19, 0x3B0, 0x1A, 0x3BC,
        0x1B, 0x3CC, 0x1C, 0x3DC,
        0x1D, 0x3EC, 0x1E, 0x3FC,
        0x1F, 0x40C, 0x20, 0x41C,
        0x21, 0x428, 0x22, 0x438,
        0x23, 0x44C, 0x24, 0x45C,
        0x25, 0x468, 0x26, 0x478,
        0x27, 0x488, 0x28, 0x498,
        0x29, 0x4A8, 0x2A, 0x4B8,
        0x2B, 0x4C8, 0x2C, 0x4D8,
        0x2D, 0x4E8, 0x2E, 0x4F8,
        0x2F, 0x508, 0x30, 0x514,
        0x31, 0x524, 0x32, 0x534,
        0x33, 0x544, 0x34, 0x550,
        0x35, 0x560, 0x36, 0x570,
        0x37, 0x580, 0x38, 0x58C,
        0x39, 0x59C, 0x3A, 0x5AC,
        0x3B, 0x5BC, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1, 0x800F0003,
        0xA0E40000, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0003, 0xA0E40000,
        0x1, 0xE00F0002, 0xA0E40000, 0x1,
        0xE00F0001, 0xA0E40000, 0x1, 0xE00F0000,
        0xA0E40000, 0x9, 0xC0010000, 0x90E40000,
        0xA0E40000, 0x9, 0xC0020000, 0x90E40000,
        0xA0E40001, 0x9, 0xC0040000, 0x90E40000,
        0xA0E40002, 0x9, 0xC0080000, 0x90E40000,
        0xA0E40003, 0x8, 0x80010001, 0x90E40003,
        0xA0E40004, 0xB, 0x800F0001, 0x80000001,
        0xA0000005, 0x5, 0x800F0001, 0x80E40001,
        0xA0E40008, 0x2, 0x800F0001, 0x80E40001,
        0xA0E40007, 0x1, 0x80080001, 0xA0FF0005,
        0x1, 0xD00F0000, 0x80E40001, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80040000, 0x80AA0000, 0xA0550005, 0x2,
        0xC00F0001, 0xA0550005, 0x81AA0000, 0x1,
        0x800F0001, 0x90E40002, 0x5, 0x80070000,
        0x90090001, 0x80520001, 0x4, 0x80070000,
        0x91520001, 0x80090001, 0x80A40000, 0x8,
        0x80080000, 0x80E40000, 0x80E40000, 0x7,
        0x80080000, 0x80FF0000, 0x5, 0x800F0000,
        0x80E40000, 0x80FF0000, 0x8, 0x80010002,
        0x90E40003, 0x80E40000, 0xD, 0x80010003,
        0x80000002, 0xA0000005, 0x2, 0x80010003,
        0x80000003, 0x80000003, 0x2, 0x80010003,
        0x80000003, 0xA1550005, 0x5, 0x800F0000,
        0x80E40000, 0x80000003, 0x2, 0x800F0002,
        0xA0E40009, 0x91E40000, 0x8, 0x80010001,
        0x80E40002, 0xA0E4000C, 0x8, 0x80020001,
        0x80E40002, 0xA0E4000D, 0x8, 0x80040001,
        0x80E40002, 0xA0E4000E, 0x1, 0xE00F0000,
        0x90E40007, 0x8, 0xE0010001, 0x90E40001,
        0xA0E4000C, 0x8, 0xE0020001, 0x90E40002,
        0xA0E4000C, 0x8, 0xE0040001, 0x80E40000,
        0xA0E4000C, 0x1, 0xE0080001, 0x80000001,
        0x8, 0xE0010002, 0x90E40001, 0xA0E4000D,
        0x8, 0xE0020002, 0x90E40002, 0xA0E4000D,
        0x8, 0xE0040002, 0x80E40000, 0xA0E4000D,
        0x1, 0xE0080002, 0x80550001, 0x8,
        0xE0010003, 0x90E40001, 0xA0E4000E, 0x8,
        0xE0020003, 0x90E40002, 0xA0E4000E, 0x8,
        0xE0040003, 0x80E40000, 0xA0E4000E, 0x1,
        0xE0080003, 0x80AA0001, 0xFFFF
    };

    // Assets/bumpdiffusetexgen.vs
    const DWORD BumpDiffuseTexGenFunction[315]
    {
        0xFFFE0101, 0x8BFFFE, 0x47554244, 0x28,
        0x1F4, 0x0, 0x1, 0x70,
        0x30, 0x74, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x64706D75, 0x75666669,
        0x65746573, 0x6E656778, 0x73762E, 0x28,
        0x2, 0x234, 0x3, 0x240,
        0x4, 0x24C, 0x5, 0x258,
        0x6, 0x264, 0x7, 0x270,
        0x8, 0x27C, 0x9, 0x288,
        0xA, 0x294, 0xB, 0x2A0,
        0xC, 0x2AC, 0xD, 0x2B8,
        0xE, 0x2C4, 0xF, 0x2D0,
        0x10, 0x2E0, 0x11, 0x2F0,
        0x12, 0x300, 0x13, 0x310,
        0x14, 0x31C, 0x15, 0x32C,
        0x16, 0x33C, 0x17, 0x34C,
        0x18, 0x35C, 0x19, 0x368,
        0x1A, 0x374, 0x1B, 0x380,
        0x1C, 0x390, 0x1D, 0x3A0,
        0x1E, 0x3B0, 0x1F, 0x3C0,
        0x20, 0x3D0, 0x21, 0x3E0,
        0x22, 0x3EC, 0x23, 0x3FC,
        0x24, 0x410, 0x25, 0x420,
        0x26, 0x42C, 0x27, 0x43C,
        0x28, 0x44C, 0x29, 0x45C,
        0x2A, 0x46C, 0x2B, 0x47C,
        0x2C, 0x48C, 0x2D, 0x49C,
        0x2E, 0x4AC, 0x2F, 0x4BC,
        0x30, 0x4CC, 0x31, 0x4DC,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x1F, 0x80000000, 0x900F0000,
        0x1F, 0x80000003, 0x900F0003, 0x1F,
        0x80000005, 0x900F0007, 0x1F, 0x80000001,
        0x900F0001, 0x1F, 0x80000002, 0x900F0002,
        0x1, 0x800F0003, 0xA0E40000, 0x1,
        0x800F0002, 0xA0E40000, 0x1, 0x800F0001,
        0xA0E40000, 0x1, 0x800F0000, 0xA0E40000,
        0x1, 0xD00F0000, 0xA0E40000, 0x1,
        0xE00F0002, 0xA0E40000, 0x1, 0xE00F0001,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x1, 0xE00F0000, 0x90E40007, 0x9,
        0x80010000, 0x90E40000, 0xA0E4000F, 0x9,
        0x80020000, 0x90E40000, 0xA0E40010, 0x9,
        0x80040000, 0x90E40000, 0xA0E40011, 0x9,
        0x80080000, 0x90E40000, 0xA0E40012, 0x1,
        0x800F0001, 0x80E40000, 0x1, 0xE00F0001,
        0x80E40001, 0x1, 0xE00F0002, 0x80E40001,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0x1, 0x800F0001, 0x90E40002, 0x5,
        0x80070000, 0x90090001, 0x80520001, 0x4,
        0x80070000, 0x91520001, 0x80090001, 0x80A40000,
        0x8, 0x80080000, 0x80E40000, 0x80E40000,
        0x7, 0x80080000, 0x80FF0000, 0x5,
        0x800F0000, 0x80E40000, 0x80FF0000, 0x8,
        0x80010001, 0xA0E40004, 0x90E40001, 0x8,
        0x80020001, 0xA0E40004, 0x90E40002, 0x8,
        0x80040001, 0xA0E40004, 0x80E40000, 0x8,
        0x80010002, 0x90E40003, 0x80E40000, 0xD,
        0x80010003, 0x80000002, 0xA0000005, 0x2,
        0x80010003, 0x80000003, 0x80000003, 0x2,
        0x80010003, 0x80000003, 0xA1550005, 0x5,
        0x80040001, 0x80AA0001, 0x80000003, 0x5,
        0x800F0001, 0x80E40001, 0xA0AA0005, 0x2,
        0xD00F0000, 0x80E40001, 0xA0AA0005, 0x1,
        0xD0080000, 0xA0FF0005, 0xFFFF
    };

    // Assets/bumpspectexgen.vs
    const DWORD BumpSpecTexGenFunction[367]
    {
        0xFFFE0101, 0x9DFFFE, 0x47554244, 0x28,
        0x23C, 0x0, 0x1, 0x70,
        0x39, 0x74, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x73706D75, 0x74636570,
        0x65677865, 0x73762E6E, 0xABABAB00, 0x28,
        0x2, 0x27C, 0x3, 0x288,
        0x4, 0x294, 0x5, 0x2A0,
        0x6, 0x2AC, 0x7, 0x2B8,
        0x8, 0x2C4, 0x9, 0x2D0,
        0xA, 0x2DC, 0xB, 0x2E8,
        0xC, 0x2F4, 0xD, 0x300,
        0xE, 0x30C, 0xF, 0x318,
        0x10, 0x328, 0x11, 0x338,
        0x12, 0x348, 0x13, 0x358,
        0x14, 0x364, 0x15, 0x374,
        0x16, 0x384, 0x17, 0x394,
        0x18, 0x3A4, 0x19, 0x3B0,
        0x1A, 0x3BC, 0x1B, 0x3C8,
        0x1C, 0x3D4, 0x1D, 0x3E4,
        0x1E, 0x3F8, 0x1F, 0x408,
        0x20, 0x414, 0x21, 0x424,
        0x22, 0x434, 0x23, 0x444,
        0x24, 0x450, 0x25, 0x460,
        0x26, 0x470, 0x27, 0x480,
        0x28, 0x48C, 0x29, 0x49C,
        0x2A, 0x4AC, 0x2B, 0x4BC,
        0x2C, 0x4CC, 0x2D, 0x4DC,
        0x2E, 0x4EC, 0x2F, 0x4FC,
        0x30, 0x50C, 0x31, 0x51C,
        0x32, 0x52C, 0x33, 0x53C,
        0x34, 0x54C, 0x35, 0x55C,
        0x36, 0x56C, 0x37, 0x57C,
        0x38, 0x58C, 0x39, 0x59C,
        0x3A, 0x5AC, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1F, 0x80000001, 0x900F0001, 0x1F,
        0x80000002, 0x900F0002, 0x1, 0x800F0003,
        0xA0E40000, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0002, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x1, 0xE00F0000,
        0x90E40007, 0x9, 0x80010000, 0x90E40000,
        0xA0E4000F, 0x9, 0x80020000, 0x90E40000,
        0xA0E40010, 0x9, 0x80040000, 0x90E40000,
        0xA0E40011, 0x9, 0x80080000, 0x90E40000,
        0xA0E40012, 0x1, 0x800F0001, 0x80E40000,
        0x1, 0xE00F0001, 0x80E40001, 0x1,
        0xE00F0002, 0x80E40001, 0x1, 0x800F0001,
        0x90E40002, 0x5, 0x80070000, 0x90090001,
        0x80520001, 0x4, 0x80070000, 0x91520001,
        0x80090001, 0x80A40000, 0x8, 0x80080000,
        0x80E40000, 0x80E40000, 0x7, 0x80080000,
        0x80FF0000, 0x5, 0x800F0000, 0x80E40000,
        0x80FF0000, 0x2, 0x800F0001, 0xA0E40009,
        0x91E40000, 0x8, 0x80080001, 0x80E40001,
        0x80E40001, 0x7, 0x80080001, 0x80FF0001,
        0x5, 0x800F0001, 0x80E40001, 0x80FF0001,
        0x2, 0x800F0002, 0xA0E40004, 0x80E40001,
        0x8, 0x80080002, 0x80E40002, 0x80E40002,
        0x7, 0x80080002, 0x80FF0002, 0x5,
        0x800F0002, 0x80E40002, 0x80FF0002, 0x8,
        0x80010001, 0x80E40002, 0x90E40001, 0x8,
        0x80020001, 0x80E40002, 0x90E40002, 0x8,
        0x80040001, 0x80E40002, 0x80E40000, 0x8,
        0x80010002, 0x90E40003, 0x80E40000, 0xD,
        0x80010003, 0x80000002, 0xA0000005, 0x2,
        0x80010003, 0x80000003, 0x80000003, 0x2,
        0x80010003, 0x80000003, 0xA1550005, 0x5,
        0x80040001, 0x80AA0001, 0x80000003, 0x5,
        0x800F0001, 0x80E40001, 0xA0AA0005, 0x2,
        0xD00F0000, 0x80E40001, 0xA0AA0005, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80080000, 0x80AA0000, 0xA0550005, 0x2,
        0x80080000, 0xA0550005, 0x81FF0000, 0x5,
        0xD0080000, 0x80FF0000, 0xA0FF0005, 0x1,
        0xC00F0001, 0xA0550005, 0xFFFF
    };

    // Assets/alphafog.vs
    const DWORD AlphaFogFunction[153]
    {
        0xFFFE0101, 0x51FFFE, 0x47554244, 0x28,
        0x10C, 0x0, 0x1, 0x68,
        0x14, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x615C7374, 0x6168706C, 0x2E676F66,
        0xAB007376, 0x28, 0x2, 0x14C,
        0x3, 0x158, 0x4, 0x164,
        0x5, 0x170, 0x6, 0x17C,
        0x7, 0x188, 0x8, 0x194,
        0x9, 0x1A0, 0xA, 0x1B0,
        0xB, 0x1C0, 0xC, 0x1D0,
        0xD, 0x1E0, 0xE, 0x1EC,
        0xF, 0x1FC, 0x10, 0x208,
        0x11, 0x218, 0x12, 0x228,
        0x13, 0x238, 0x14, 0x248,
        0x15, 0x254, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0000, 0xA0E40000,
        0x9, 0xC0010000, 0x90E40000, 0xA0E40000,
        0x9, 0xC0020000, 0x90E40000, 0xA0E40001,
        0x9, 0xC0040000, 0x90E40000, 0xA0E40002,
        0x9, 0xC0080000, 0x90E40000, 0xA0E40003,
        0x1, 0xE00F0000, 0x90E40007, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x1,
        0x800F0001, 0xA0E4000A, 0x2, 0x80040000,
        0x80AA0000, 0xA1000006, 0x5, 0x80040000,
        0x80AA0000, 0xA0550006, 0xB, 0x80040000,
        0x80AA0000, 0xA0000005, 0xA, 0x80080001,
        0x80AA0000, 0xA0550005, 0x1, 0xD00F0000,
        0x80E40001, 0x1, 0xC00F0001, 0xA0550005,
        0xFFFF
    };

    // Assets/gloss.vs
    const DWORD GlossFunction[261]
    {
        0xFFFE0101, 0x76FFFE, 0x47554244, 0x28,
        0x1A0, 0x0, 0x1, 0x64,
        0x27, 0x68, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x675C7374, 0x73736F6C, 0x73762E,
        0x28, 0x2, 0x1E0, 0x3,
        0x1EC, 0x4, 0x1F8, 0x5,
        0x204, 0x6, 0x210, 0x7,
        0x21C, 0x8, 0x228, 0x9,
        0x234, 0xA, 0x240, 0xB,
        0x24C, 0xC, 0x258, 0xD,
        0x268, 0xE, 0x278, 0xF,
        0x288, 0x10, 0x298, 0x11,
        0x2A8, 0x12, 0x2B8, 0x13,
        0x2C8, 0x14, 0x2D8, 0x15,
        0x2E4, 0x16, 0x2F0, 0x17,
        0x2FC, 0x18, 0x308, 0x19,
        0x318, 0x1A, 0x324, 0x1B,
        0x334, 0x1C, 0x344, 0x1D,
        0x354, 0x1E, 0x364, 0x1F,
        0x374, 0x20, 0x384, 0x21,
        0x394, 0x22, 0x3A4, 0x23,
        0x3B0, 0x24, 0x3C0, 0x25,
        0x3D0, 0x26, 0x3E0, 0x27,
        0x3F0, 0x28, 0x400, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x1F, 0x80000000, 0x900F0000, 0x1F,
        0x80000003, 0x900F0003, 0x1F, 0x80000005,
        0x900F0007, 0x1, 0x800F0002, 0xA0E40000,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0002, 0xA0E40000,
        0x1, 0xE00F0001, 0xA0E40000, 0x1,
        0xE00F0000, 0xA0E40000, 0x9, 0xC0010000,
        0x90E40000, 0xA0E40000, 0x9, 0xC0020000,
        0x90E40000, 0xA0E40001, 0x9, 0xC0040000,
        0x90E40000, 0xA0E40002, 0x9, 0xC0080000,
        0x90E40000, 0xA0E40003, 0x8, 0x80010001,
        0x90E40003, 0xA0E40004, 0xB, 0x800F0001,
        0x80000001, 0xA0000005, 0x5, 0x800F0001,
        0x80E40001, 0xA0E40008, 0x2, 0x800F0001,
        0x80E40001, 0xA0E40007, 0x1, 0x80080001,
        0xA0FF0005, 0x1, 0xD00F0000, 0x80E40001,
        0x1, 0xE00F0000, 0x90E40007, 0x1,
        0xE00F0001, 0x90E40007, 0x2, 0x800F0001,
        0xA0E40009, 0x91E40000, 0x7, 0x800F0002,
        0x80FF0001, 0x5, 0x800F0002, 0x80E40001,
        0x80E40002, 0x2, 0x800F0000, 0x90E40003,
        0x90E40003, 0x8, 0x80010000, 0x80E40000,
        0x80E40002, 0x5, 0x800F0001, 0x80000000,
        0x90E40003, 0x2, 0x800F0001, 0x80E40001,
        0x80E40002, 0x8, 0x80010000, 0x80E40001,
        0xA0E4000C, 0x8, 0x80020000, 0x80E40001,
        0xA0E4000D, 0x8, 0x80040000, 0x80E40001,
        0xA0E4000E, 0x1, 0xE00F0002, 0x80E40000,
        0x9, 0x80040000, 0x90E40000, 0xA0E40002,
        0x2, 0x80040000, 0x80AA0000, 0xA1000006,
        0x5, 0x80040000, 0x80AA0000, 0xA0550006,
        0xB, 0x80040000, 0x80AA0000, 0xA0000005,
        0xA, 0x80040000, 0x80AA0000, 0xA0550005,
        0x2, 0xC00F0001, 0xA0550005, 0x81AA0000,
        0xFFFF
    };

    // Assets/projectedshadow.vs
    const DWORD ProjectedShadowFunction[208]
    {
        0xFFFE0101, 0x65FFFE, 0x47554244, 0x28,
        0x15C, 0x0, 0x1, 0x70,
        0x1D, 0x74, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x705C7374, 0x656A6F72, 0x64657463,
        0x64616873, 0x762E776F, 0xABAB0073, 0x28,
        0x2, 0x19C, 0x3, 0x1A8,
        0x4, 0x1B4, 0x5, 0x1C0,
        0x6, 0x1CC, 0x7, 0x1D8,
        0x8, 0x1E4, 0x9, 0x1F0,
        0xA, 0x1FC, 0xB, 0x20C,
        0xC, 0x21C, 0xD, 0x22C,
        0xE, 0x23C, 0xF, 0x24C,
        0x10, 0x25C, 0x11, 0x268,
        0x12, 0x278, 0x13, 0x288,
        0x14, 0x298, 0x15, 0x2A8,
        0x16, 0x2B8, 0x17, 0x2C4,
        0x18, 0x2D0, 0x19, 0x2DC,
        0x1A, 0x2EC, 0x1B, 0x2FC,
        0x1C, 0x30C, 0x1D, 0x31C,
        0x1E, 0x32C, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x1F,
        0x80000000, 0x900F0000, 0x1F, 0x80000003,
        0x900F0003, 0x1F, 0x80000005, 0x900F0007,
        0x1, 0x800F0001, 0xA0E40000, 0x1,
        0x800F0000, 0xA0E40000, 0x1, 0xD00F0000,
        0xA0E40000, 0x1, 0xE00F0001, 0xA0E40000,
        0x1, 0xE00F0000, 0xA0E40000, 0x9,
        0xC0010000, 0x90E40000, 0xA0E40000, 0x9,
        0xC0020000, 0x90E40000, 0xA0E40001, 0x9,
        0xC0040000, 0x90E40000, 0xA0E40002, 0x9,
        0xC0080000, 0x90E40000, 0xA0E40003, 0x8,
        0x80080000, 0x90E40003, 0xA0E40004, 0xD,
        0x80080000, 0x80FF0000, 0xA0000005, 0x1,
        0xD0070000, 0xA0550005, 0x5, 0xD0080000,
        0x80FF0000, 0xA0FF0005, 0x9, 0x80010000,
        0x90E40000, 0xA0E4000F, 0x9, 0x80020000,
        0x90E40000, 0xA0E40010, 0x9, 0x80040000,
        0x90E40000, 0xA0E40011, 0x9, 0x80080000,
        0x90E40000, 0xA0E40012, 0x1, 0x800F0001,
        0x80E40000, 0x1, 0xE00F0000, 0x80E40001,
        0x1, 0xE00F0001, 0x80E40001, 0x9,
        0x80040000, 0x90E40000, 0xA0E40002, 0x2,
        0x80040000, 0x80AA0000, 0xA1000006, 0x5,
        0x80040000, 0x80AA0000, 0xA0550006, 0xB,
        0x80040000, 0x80AA0000, 0xA0000005, 0xA,
        0x80040000, 0x80AA0000, 0xA0550005, 0x2,
        0xC00F0001, 0xA0550005, 0x81AA0000, 0xFFFF
    };
}

namespace DX::Shaders::Pixel
{
    // Assets/decal.ps
    const DWORD DecalFunction[53]
    {
        0xFFFF0101, 0x2CFFFE, 0x47554244, 0x28,
        0x78, 0x0, 0x1, 0x64,
        0x2, 0x68, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x645C7374, 0x6C616365, 0x73702E,
        0x28, 0x2, 0xB8, 0x3,
        0xC0, 0x7263694D, 0x666F736F, 0x52282074,
        0x33442029, 0x20395844, 0x64616853, 0x41207265,
        0x6D657373, 0x72656C62, 0x322E3920, 0x35392E39,
        0x31332E32, 0xAB003131, 0x42, 0xB00F0000,
        0x5, 0x800F0000, 0xB0E40000, 0x90E40000,
        0xFFFF
    };

    // Assets/decalkill.ps
    const DWORD DecalTexKillFunction[58]
    {
        0xFFFF0101, 0x2FFFFE, 0x47554244, 0x28,
        0x84, 0x0, 0x1, 0x68,
        0x3, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x645C7374, 0x6C616365, 0x6C6C696B,
        0x73702E, 0x28, 0x2, 0xC4,
        0x3, 0xCC, 0x4, 0xD4,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x42, 0xB00F0000, 0x41,
        0xB00F0001, 0x5, 0x800F0000, 0xB0E40000,
        0x90E40000, 0xFFFF
    };

    // Assets/bump.ps
    const DWORD BumpFunction[78]
    {
        0xFFFF0101, 0x36FFFE, 0x47554244, 0x28,
        0xA0, 0x0, 0x1, 0x64,
        0x7, 0x68, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x2E706D75, 0xAB007370,
        0x28, 0x2, 0xE0, 0x3,
        0xE8, 0x4, 0xF0, 0x5,
        0xF8, 0x6, 0x108, 0x7,
        0x118, 0x8, 0x124, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x42, 0xB00F0000, 0x41, 0xB00F0001,
        0x42, 0xB00F0002, 0x8, 0x801F0000,
        0xB4E40000, 0x94E40000, 0x2, 0x800F0000,
        0x80E40000, 0xA0E40000, 0x1, 0x80080000,
        0x90FF0000, 0x5, 0x800F0000, 0x80E40000,
        0xB0E40002, 0xFFFF
    };

    // Assets/bumpspec.ps
    const DWORD BumpSpecFunction[89]
    {
        0xFFFF0101, 0x39FFFE, 0x47554244, 0x28,
        0xAC, 0x0, 0x1, 0x68,
        0x8, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x73706D75, 0x2E636570,
        0xAB007370, 0x28, 0x2, 0xEC,
        0x3, 0xF4, 0x4, 0x104,
        0x5, 0x114, 0x6, 0x124,
        0x7, 0x134, 0x8, 0x144,
        0x9, 0x154, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x8, 0x80170000, 0xB4E40000,
        0x94E40000, 0x5, 0x80070001, 0x80E40000,
        0x80E40000, 0x5, 0x80070000, 0x80E40001,
        0x80E40001, 0x5, 0x80070001, 0x80E40000,
        0x80E40000, 0x5, 0x80070000, 0x80E40001,
        0x80E40001, 0x5, 0x80070000, 0x80E40000,
        0xB0FF0000, 0x1, 0x80080000, 0x90FF0000,
        0xFFFF
    };

    // Assets/bumpcubic.ps
    const DWORD BumpCubicFunction[74]
    {
        0xFFFF0101, 0x35FFFE, 0x47554244, 0x28,
        0x9C, 0x0, 0x1, 0x68,
        0x6, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x63706D75, 0x63696275,
        0x73702E, 0x28, 0x2, 0xDC,
        0x3, 0xE4, 0x4, 0xF0,
        0x5, 0xFC, 0x6, 0x108,
        0x7, 0x118, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x49, 0xB00F0001, 0xB4E40000,
        0x49, 0xB00F0002, 0xB4E40000, 0x4D,
        0xB00F0003, 0xB4E40000, 0x5, 0x80070000,
        0xB0E40003, 0x90E40000, 0x1, 0x80080000,
        0x90E40000, 0xFFFF
    };

    // Assets/bumpspectexgen.ps
    const DWORD BumpSpecTexGenFunction[99]
    {
        0xFFFF0101, 0x3FFFFE, 0x47554244, 0x28,
        0xC4, 0x0, 0x1, 0x70,
        0xA, 0x74, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x625C7374, 0x73706D75, 0x74636570,
        0x65677865, 0x73702E6E, 0xABABAB00, 0x28,
        0x2, 0x104, 0x3, 0x10C,
        0x4, 0x114, 0x5, 0x11C,
        0x6, 0x12C, 0x7, 0x13C,
        0x8, 0x14C, 0x9, 0x15C,
        0xA, 0x16C, 0xB, 0x17C,
        0x7263694D, 0x666F736F, 0x52282074, 0x33442029,
        0x20395844, 0x64616853, 0x41207265, 0x6D657373,
        0x72656C62, 0x322E3920, 0x35392E39, 0x31332E32,
        0xAB003131, 0x42, 0xB00F0000, 0x41,
        0xB00F0001, 0x42, 0xB00F0002, 0x8,
        0x801F0001, 0xB4E40000, 0x94E40000, 0x5,
        0x800F0000, 0x80E40001, 0x80E40001, 0x5,
        0x800F0001, 0x80E40000, 0x80E40000, 0x5,
        0x800F0000, 0x80E40001, 0x80E40001, 0x5,
        0x800F0000, 0x80E40000, 0xB0FF0000, 0x5,
        0x800F0000, 0x80E40000, 0xB0E40002, 0x1,
        0x80080000, 0x90FF0000, 0xFFFF
    };

    // Assets/detail.ps
    const DWORD DetailFunction[74]
    {
        0xFFFF0101, 0x35FFFE, 0x47554244, 0x28,
        0x9C, 0x0, 0x1, 0x68,
        0x6, 0x6C, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x645C7374, 0x69617465, 0x73702E6C,
        0xABABAB00, 0x28, 0x2, 0xDC,
        0x3, 0xE4, 0x4, 0xEC,
        0x5, 0xF8, 0x6, 0x104,
        0x7, 0x114, 0x7263694D, 0x666F736F,
        0x52282074, 0x33442029, 0x20395844, 0x64616853,
        0x41207265, 0x6D657373, 0x72656C62, 0x322E3920,
        0x35392E39, 0x31332E32, 0xAB003131, 0x42,
        0xB00F0000, 0x42, 0xB00F0001, 0x1,
        0x800F0000, 0xB0E40000, 0x1, 0x800F0001,
        0xB0E40001, 0x5, 0x800F0000, 0x80E40000,
        0x80E40001, 0x5, 0x800F0000, 0x80E40000,
        0x90E40000, 0xFFFF
    };

    // Assets/gloss.ps
    const DWORD GlossFunction[66]
    {
        0xFFFF0101, 0x32FFFE, 0x47554244, 0x28,
        0x90, 0x0, 0x1, 0x64,
        0x5, 0x68, 0x0, 0x0,
        0x0, 0x475C3A43, 0x345C5449, 0x32653478,
        0x6A6E492D, 0x5C746365, 0x72756F53, 0x525C6563,
        0x7269442E, 0x58746365, 0x302E392E, 0x5C4C542E,
        0x65737341, 0x675C7374, 0x73736F6C, 0x73702E,
        0x28, 0x2, 0xD0, 0x3,
        0xD8, 0x4, 0xE0, 0x5,
        0xE8, 0x6, 0xF4, 0x7263694D,
        0x666F736F, 0x52282074, 0x33442029, 0x20395844,
        0x64616853, 0x41207265, 0x6D657373, 0x72656C62,
        0x322E3920, 0x35392E39, 0x31332E32, 0xAB003131,
        0x42, 0xB00F0000, 0x42, 0xB00F0001,
        0x42, 0xB00F0002, 0x1, 0x800F0000,
        0xB0E40000, 0x5, 0x800F0000, 0x80E40000,
        0x90E40000, 0xFFFF
    };
}